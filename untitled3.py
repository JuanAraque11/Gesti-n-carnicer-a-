# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jv3rH-p_s3nA0nWBaSyWO7_D8Q0gmmZJ
"""

from http.server import BaseHTTPRequestHandler, HTTPServer
import json
from urllib.parse import urlparse, parse_qs

# Base de datos temporal para almacenar la información de los productos
productos = [
    {"id": 1, "nombre": "Filete de Ternera", "precio": 10.99, "cantidad_disponible": 20},
    {"id": 2, "nombre": "Chuletas de Cerdo", "precio": 8.50, "cantidad_disponible": 15},
    {"id": 3, "nombre": "Pollo Entero", "precio": 6.99, "cantidad_disponible": 30},
    {"id": 4, "nombre": "Costillas de Res", "precio": 12.75, "cantidad_disponible": 10}
]

class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        parsed_path = urlparse(self.path)
        if parsed_path.path == '/productos':
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            self.wfile.write(json.dumps(productos).encode())
        else:
            self.send_response(404)
            self.end_headers()
            self.wfile.write(b'Endpoint no encontrado')

    def do_POST(self):
        parsed_path = urlparse(self.path)
        if parsed_path.path == '/productos':
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            nuevo_producto = json.loads(post_data.decode())
            productos.append(nuevo_producto)
            self.send_response(201)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            self.wfile.write(json.dumps({"mensaje": "Producto añadido correctamente"}).encode())
        else:
            self.send_response(404)
            self.end_headers()
            self.wfile.write(b'Endpoint no encontrado')

def run(server_class=HTTPServer, handler_class=SimpleHTTPRequestHandler, port=8000):
    server_address = ('', port)
    httpd = server_class(server_address, handler_class)
    print(f'Starting server on port {port}...')
    httpd.serve_forever()

if __name__ == '__main__':
    run()

"""Analisis base de datos"""

